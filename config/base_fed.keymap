/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

// ===== LAYER DEFINITIONS =====
#define BASE         0
#define LOWR         1
#define RAISE        2
#define NAV          3
#define GAME         4
#define MOUSELR      5
#define MOUSE_TP_SET 6
#define STUFF        7

// ===== INCLUDES =====
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>

#include "includes/mouse_keys.dtsi"
#include "includes/mouse_tp.dtsi"
#include "includes/mouse_tp_badjeff_input_listener.dtsi"

// ===== BEHAVIOR MODIFICATIONS =====
&mt {
    tapping-term-ms = <300>;
};

&sl {
    release-after-ms = <2000>;
};

&lt {
    tapping-term-ms = <200>;
};

// ===== MACROS =====
/ {
    macros {
        pswrd: pswrd {
            label = "pswrd";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings = <&macro_tap &kp P &kp A &kp S &kp S &kp W &kp O &kp R &kp D>;
        };

        pwr: pwr {
            label = "pwr";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1000>;
            tap-ms = <40>;
            bindings = <&macro_tap &kp RG(X)>, <&macro_wait_time 80>, <&macro_tap &kp UP &kp UP &kp RIGHT &kp UP &kp UP &kp RET>;
        };

        sleep: sleep {
            label = "sleep";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <1000>;
            tap-ms = <40>;
            bindings = <&macro_tap &kp RG(X)>, <&macro_wait_time 80>, <&macro_tap &kp UP &kp UP &kp RIGHT &kp DOWN &kp RET>;
        };

        mail: mail {
            label = "mail";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <20>;
            tap-ms = <20>;
            bindings = <&macro_tap &kp G &kp A &kp M &kp M &kp A &kp N &kp Y &kp AT &kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };


        /*
         * Mouse Click with layer activation
         *
         * While holding, it performs both a mouse click hold
         * as well as a layer activation.
         *
         * Usage:
         *   - &mkp_lt NAV LCLK
         */
        m_lt_mkp: m_lt_mkp {
            compatible = "zmk,behavior-macro-two-param";
            wait-ms = <0>;
            tap-ms = <0>;
            #binding-cells = <2>;
            bindings = <&macro_param_1to1>,
                       <&macro_press &mo MACRO_PLACEHOLDER>,
                       <&macro_param_2to1>,
                       <&macro_press &mkp MACRO_PLACEHOLDER>,
                       <&macro_pause_for_release>,
                       <&macro_param_2to1>,
                       <&macro_release &mkp MACRO_PLACEHOLDER>,
                       <&macro_param_1to1>,
                       <&macro_release &mo MACRO_PLACEHOLDER>;
        };
    };
};

// ===== BEHAVIORS =====
/ {
    behaviors {
        // Tap dance behaviors
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp MINUS>, <&kp LC(LA(A))>, <&mail>, <&pswrd>;
        };

        td1: tap_dance_1 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp ESC>, <&kp DEL>;
        };


        // Hold-tap behaviors
        ht_tp: holdTap_tapPreferred {
            compatible = "zmk,behavior-hold-tap";
            label = "ht_tp";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <300>;
            require-prior-idle-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        ht_gui_space: ht_gui_space {
            compatible = "zmk,behavior-hold-tap";
            label = "ht_gui_space";
            #binding-cells = <2>;
            tapping-term-ms = <700>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <150>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };


        /*
         * Layer Toggle
         *
         * Usage: &ltog LGUI NAV
         * Tap: Layer Toggle
         * Hold: Keypress
         */
        ltog: ltog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&kp>, <&tog>;
        };

        /*
         * Layer & mouse key
         *
         * Usage: &lt_mkp NUM RCLK
         * Tap: Mouse RCLK
         * Hold: Layer NUM
         */
        lt_mkp: lt_mkp {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            bindings = <&mo>, <&mkp>;
        };

        /*
         * GUI Hold-Tap
         *
         * Usage: &ht_gui 0 0
         * Tap: GUI key press
         * Hold: GUI key hold
         */
        ht_gui: ht_gui {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };

        ht_grave_tilde: ht_grave_tilde {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&kp>;
        };
    };
};

// ===== CONDITIONAL LAYERS =====
/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        dual_hold_layer {
            if-layers = <LOWR RAISE>;
            then-layer = <MOUSE_TP_SET>;
        };
    };
};

// ===== CAPS WORD CONFIGURATION =====
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};
// ===== KEYMAP =====
/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │ td1 │  Q  │  W  │  E  │  R  │  T  │   │  Y  │  U  │  I  │  O  │  P  │BKSP │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │aTAB │  A  │  S  │  D  │  F  │  G  │   │  H  │  J  │  K  │  L  │  ;  │  '  │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │SHFT │  Z  │  X  │  C  │  V  │  B  │   │  N  │  M  │  ,  │  .  │  /  │ td0 │
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │ CTL │ LWR │ SPC │   │ SPC │ RSE │ ALT │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &td1          &ht_tp LC(Q) Q       &ht_tp LC(W) W      &ht_tp LC(E) E    &ht_tp LC(R) R      &ht_tp LC(T) T           &kp Y      &kp U          &kp I      &kp O    &kp P     &kp BSPC
                &lt STUFF TAB &ht_tp LC(A) A      &ht_tp LC(S) S       &kp D       &ht_tp LC(F) F              &kp G                 &kp H      &kp J    &kp K   &ht_tp LC(L) L     &kp SEMI  &kp SQT
                &kp LSHFT     &ht_tp LC(Z) Z   &ht_tp LC(X) X   &ht_tp LC(C) C   &ht_tp LC(V) V     &kp B                 &kp N      &kp M          &kp COMMA  &kp DOT  &kp FSLH  &td0
                                                                &kp LCTRL        &lt LOWR RET       &lt NAV SPACE         &ht_gui_space LGUI SPACE  &lt RAISE BSPC &kp RALT
            >;
        };

        lower_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │ td2 │Pause│  7  │  8  │  9  │SIGN │   │PgUp │Bsps │ Up  │ del │DLine│  \  │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │  ~  │ F8  │  4  │  5  │  6  │LANG │   │PgDn │Left │Down │Right│Entr │ Del │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │Bspc │  0  │  1  │  2  │  3  │ LNC │   │ End │LStr │ End │LEnd │delWL│delWR│
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │  .  │     │     │   │     │     │     │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &kp LC(RS(ESC)) &kp PAUSE_BREAK &ht_tp F7 N7    &ht_tp F8 N8    &ht_tp F9 N9    &ht_tp F10 MINUS     &kp LC(PG_UP)  &kp LC(PG_DN) &kp PG_UP  &kp LC(PG_DN) &kp LC(DEL)  &kp BSLH
                &kp TILDE &kp F8          &ht_tp F4 N4    &ht_tp F5 N5    &ht_tp F6 N6    &ht_tp F11 LG(SPACE) &kp PG_DN      &kp LA(LEFT)  &kp PG_DN  &kp LA(RIGHT) &kp LC(W)   &kp DEL
                &kp BSPC   &kp N0          &ht_tp F1 N1    &ht_tp F2 N2    &ht_tp F3 N3    &ht_tp F12 LA(SPACE) &kp END        &kp LA(HOME)  &kp END    &kp LC(END)   &kp LC(BSPC) &kp LC(DEL)
                                                            &kp DOT         &trans          &sk RGUI             &sk RGUI   &trans        &trans
            >;

        };



        raise_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │BTCLR│ BT1 │ BT2 │ BT3 │ BT4 │ BT5 │   │game │delWL│     │delWr│     │Game │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │  ^  │  !  │  @  │  #  │  $  │  %  │   │  ^  │  &  │  *  │  (  │  )  │  |  │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │  =  │  -  │  +  │  /  │  *  │   │  (  │  )  │  [  │  ]  │  {  │  }  │
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │     │     │     │   │scrSH│     │stRGUI│
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &trans        &kp LC(BSPC) &trans    &kp LC(DEL) &trans     &tog GAME
                &kp LS(N6) &kp LS(N1)   &kp LS(N2)   &kp LS(N3)   &kp LS(N4)   &kp LS(N5)        &kp LS(N6)    &kp LS(N7)   &kp LS(N8) &kp LS(N9) &kp LS(N0) &kp PIPE
                &trans     &kp EQUAL    &kp MINUS    &kp PLUS     &kp FSLH     &kp STAR          &kp LS(N9)    &kp LS(N0)   &kp LBKT  &kp RBKT   &kp LBRC   &kp RBRC
                                                     &trans       &trans       &trans            &kp LG(LS(S)) &trans       &sk RGUI
            >;
        };

        nav_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │fclos│ffwd │ftleft│ up │ftrgt│fback│   │     │     │     │     │     │     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │wlose│wslft│ Left│Down │Right│wsr  │   │scrSh│vDown│mute │ vUP │     │sleep│
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │wleft│wriht│wdown│ wup │wnext│wprev│   │scrSh│prev │stop │next │     │ pwr │
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │     │     │     │   │     │     │     │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &kp LG(GRAVE) &kp LG(COMMA)   &kp LC(PG_UP)   &kp LC(W)     &kp LC(PG_DN)    &kp LG(PERIOD)        &kp LG(N)         &kp LG(H)    &trans        &trans        &trans &trans
                &kp LA(F4)   &kp LG(LC(LEFT)) &kp LEFT      &kp DOWN    &kp RIGHT        &ht_tp DEL LG(LC(RIGHT)) &kp LG(LS(S))  &kp C_VOL_DN &kp C_MUTE    &kp C_VOL_UP  &trans &sleep
                &kp LG(DOWN) &kp LG(UP)       &kp LG(LEFT)  &kp LG(RIGHT) &kp LG(LS(LEFT)) &kp LG(LS(RIGHT))     &kp LC(RA(LS(H))) &kp C_PREV   &kp C_PP      &kp C_NEXT    &trans &pwr
                                                             &kp LGUI     &trans           &trans                &trans            &kp LC(PLUS) &kp LC(MINUS)
            >;
        };

        game_layer {
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │ td1 │  Q  │  W  │  E  │  R  │  T  │   │  Y  │  U  │  I  │  O  │  P  │BKSP │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │ TAB │  A  │  S  │  D  │  F  │  G  │   │  H  │  J  │  K  │  L  │  ;  │  '  │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │SHFT │  Z  │  X  │  C  │  V  │  B  │   │  N  │  M  │  ,  │  .  │  /  │ ent │
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │ CTL │ LWR │ SPC │   │ SPC │ RSE │ ALT │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &kp ESC   &kp Q   &kp W     &kp E     &kp R      &kp T        &kp Y     &kp U     &kp I     &kp O   &kp P    &kp BSPC
                &kp TAB   &kp A   &kp S     &kp D     &kp F      &kp G        &kp H     &kp J     &kp K     &kp L   &kp SEMI &kp SQT
                &kp LSHFT &kp Z   &kp X     &kp C     &kp V      &kp B        &kp N     &kp M     &kp COMMA &kp DOT &kp FSLH &tog GAME
                                  &kp LCTRL &kp RET &kp SPACE               &kp SPACE &kp BSPC &kp RALT
            >;
        };

        mouselr_layer {
            display-name = "Mouse";
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │     │     │     │ SUp │     │     │   │     │     │     │     │     │     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │     │ SLt │ SDn │ SRt │     │   │     │     │     │     │     │     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │     │     │     │     │     │   │     │     │     │     │     │     │
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │ RCK │ LCK │ MCK │   │ MCK │ LCK │ RCK │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &trans &trans           &trans           &msc SCRL_UP   &trans            &trans            &trans    &trans    &trans &trans &trans &trans
                &trans &trans           &msc SCRL_LEFT   &msc SCRL_DOWN &msc SCRL_RIGHT   &trans            &trans    &trans    &trans &trans &trans &trans
                &trans &trans           &trans           &trans         &trans            &trans            &trans    &trans    &trans &trans &trans &trans
                                                         &mkp RCLK      &mkp LCLK         &mkp MCLK         &mkp MCLK &mkp LCLK &mkp RCLK
            >;
        };

        MOUSE_TP_SET_layer {
            display-name = "TP Settings";
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │     │     │     │TP_SD│TP_SI│TPPTI│   │TPPTI│TP_SD│TP_SI│     │     │     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │RESET│RESET│     │TPNID│TPNII│TPPTD│   │TPPTD│TPNID│TPNII│     │RESET│RESET│
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │ LOG │ LOG │     │TPV6D│TPV6I│     │   │     │TPV6D│TPV6I│     │ LOG │ LOG │
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │TGSET│ LCK │ RCK │   │ MCK │ LCK │ RCK │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &none       &none       &none  U_MSS_TP_S_D  U_MSS_TP_S_I  U_MSS_TP_PT_I     U_MSS_TP_PT_I U_MSS_TP_S_D  U_MSS_TP_S_I  &none  &none       &none
                U_MSS_RESET U_MSS_RESET &none  U_MSS_TP_NI_D U_MSS_TP_NI_I U_MSS_TP_PT_D     U_MSS_TP_PT_D U_MSS_TP_NI_D U_MSS_TP_NI_I &none  U_MSS_RESET U_MSS_RESET
                U_MSS_LOG   U_MSS_LOG   &none  U_MSS_TP_V6_D U_MSS_TP_V6_I &none             &none         U_MSS_TP_V6_D U_MSS_TP_V6_I &none  U_MSS_LOG   U_MSS_LOG
                                               &tog MOUSE_TP_SET &mkp LCLK &mkp RCLK           &mkp MCLK     &mkp LCLK     &mkp RCLK
            >;
        };

        stuff_layer {
            display-name = "Stuff";
            // ┌─────┬─────┬─────┬─────┬─────┬─────┐   ┌─────┬─────┬─────┬─────┬─────┬─────┐
            // │     │     │     │mail │     │     │   │PgUp │bspc │ up  │ del │C+del│     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │A+bsp│C+lf │     │     │     │   │PgDn │left │down │right│ ret │     │
            // ├─────┼─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┼─────┤
            // │     │A+bsp│C+lf │     │     │     │   │     │     │     │     │C+rht│C+del│
            // └─────┴─────┴─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┴─────┴─────┘
            //                   │     │     │     │   │     │     │     │
            //                   └─────┴─────┴─────┘   └─────┴─────┴─────┘
            bindings = <
                &ht_grave_tilde TILDE GRAVE &trans        &trans        &mail        &trans  &trans        &kp PG_UP  &kp BSPC      &kp UP    &kp DEL   &kp LC(DEL)   &trans
                &trans     &kp LA(BSPC)  &kp LC(LEFT)  &trans       &trans  &trans        &kp PG_DN  &kp LEFT      &kp DOWN  &kp RIGHT &kp RET       &trans  
                &trans     &kp LA(BSPC)  &kp LC(LEFT)  &trans       &trans  &trans        &trans     &trans        &trans    &trans    &kp LC(RIGHT) &kp LC(DEL)
                                                       &trans       &trans  &trans        &trans     &trans        &trans
            >;
        };
    };
};
